package com.cuius.home.entity;
// Generated Jul 3, 2019 5:21:22 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * PropertyCategory generated by hbm2java
 */
@Entity
@Table(name="property_category"
    ,catalog="cuius_home"
)
public class PropertyCategory  implements java.io.Serializable {


     private Integer categoryId;
     private String categoryName;
     private String categoryDescription;
     private Set properties = new HashSet(0);

    public PropertyCategory() {
    }

	
    public PropertyCategory(String categoryName, String categoryDescription) {
        this.categoryName = categoryName;
        this.categoryDescription = categoryDescription;
    }
    public PropertyCategory(String categoryName, String categoryDescription, Set properties) {
       this.categoryName = categoryName;
       this.categoryDescription = categoryDescription;
       this.properties = properties;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="category_id", unique=true, nullable=false)
    public Integer getCategoryId() {
        return this.categoryId;
    }
    
    public void setCategoryId(Integer categoryId) {
        this.categoryId = categoryId;
    }

    
    @Column(name="category_name", nullable=false, length=500)
    public String getCategoryName() {
        return this.categoryName;
    }
    
    public void setCategoryName(String categoryName) {
        this.categoryName = categoryName;
    }

    
    @Column(name="category_description", nullable=false, length=5000)
    public String getCategoryDescription() {
        return this.categoryDescription;
    }
    
    public void setCategoryDescription(String categoryDescription) {
        this.categoryDescription = categoryDescription;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="propertyCategory")
    public Set getProperties() {
        return this.properties;
    }
    
    public void setProperties(Set properties) {
        this.properties = properties;
    }




}


